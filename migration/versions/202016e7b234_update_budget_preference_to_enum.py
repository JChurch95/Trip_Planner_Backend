"""update_budget_preference_to_enum

Revision ID: 202016e7b234
Revises: 7976d6d17eff
Create Date: 2024-11-07 12:34:35.032034
"""

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '202016e7b234'
down_revision: Union[str, None] = '7976d6d17eff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First drop the existing budget_preference column
    op.drop_column('user_profiles', 'budget_preference')
    
    # Create the enum type
    budget_enum = sa.Enum('daily_budget_50_100', 'daily_budget_100_200', 
                         'daily_budget_200_500', 'daily_budget_500_1000', 
                         'daily_budget_1000_plus', name='budgetpreference')
    budget_enum.create(op.get_bind())
    
    # Add the column back with the new enum type
    op.add_column('user_profiles',
        sa.Column('budget_preference', budget_enum, nullable=True)
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the enum column
    op.drop_column('user_profiles', 'budget_preference')
    
    # Add back the original string column
    op.add_column('user_profiles',
        sa.Column('budget_preference', sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    
    # Drop the enum type
    sa.Enum(name='budgetpreference').drop(op.get_bind())
    # ### end Alembic commands ###
